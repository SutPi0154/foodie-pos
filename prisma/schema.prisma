// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Company {
  id         Int        @id @default(autoincrement())
  name       String
  address    String?
  locations  Location[]
  isArchived Boolean    @default(false)
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt

  menuCateogries MenuCategory[]
  User           User[]
}

model Location {
  id                           Int                            @id @default(autoincrement())
  name                         String
  address                      String
  company                      Company                        @relation(fields: [companyId], references: [id])
  companyId                    Int
  disabledLocationMenuCategory DisabledLocationMenuCategory[]
  disabledLoactionMenu         DisabledLocationMenu[]
  table                        Table[]
  isArchived                   Boolean                        @default(false)
  createdAt                    DateTime                       @default(now())
  updatedAt                    DateTime                       @updatedAt
}

model MenuCategory {
  id                           Int                            @id @default(autoincrement())
  name                         String
  company                      Company                        @relation(fields: [companyId], references: [id])
  companyId                    Int
  disabledLocationMenuCategory DisabledLocationMenuCategory[]
  menuCategoryMenu             MenuCategoryMenu[]
  isArchived                   Boolean                        @default(false)
  createdAt                    DateTime                       @default(now())
  updatedAt                    DateTime                       @updatedAt
}

model DisabledLocationMenuCategory  {
  id             Int          @id @default(autoincrement())
  loaction       Location     @relation(fields: [locationId], references: [id])
  locationId     Int
  menuCategory   MenuCategory @relation(fields: [menuCategoryId], references: [id])
  menuCategoryId Int
  isArchived     Boolean      @default(false)
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
}

model Menu {
  id                   Int                    @id @default(autoincrement())
  name                 String
  price                Int                    @default(0)
  description          String?
  assetUrl             String?
  disabledLoactionMenu DisabledLocationMenu[]
  menuCategoryMenu     MenuCategoryMenu[]
  menuAddonCategory    MenuAddonCategory[]
  orderLine            OrderLine[]
  isArchived           Boolean                @default(false)
  createdAt            DateTime               @default(now())
  updatedAt            DateTime               @updatedAt
}

model DisabledLocationMenu {
  id         Int      @id @default(autoincrement())
  loaction   Location @relation(fields: [locationId], references: [id])
  locationId Int
  menu       Menu     @relation(fields: [menuId], references: [id])
  menuId     Int
  isArchived Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model MenuCategoryMenu {
  id             Int          @id @default(autoincrement())
  menu           Menu         @relation(fields: [menuId], references: [id])
  menuId         Int
  menuCategory   MenuCategory @relation(fields: [menuCategoryId], references: [id])
  menuCategoryId Int
  isArchived     Boolean      @default(false)
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
}

model AddonCategory {
  id                Int                 @id @default(autoincrement())
  name              String
  isRequired        Boolean             @default(false)
  menuAddonCategory MenuAddonCategory[]
  Addon             Addon[]
  isArchived        Boolean             @default(false)
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
}

model MenuAddonCategory {
  id              Int           @id @default(autoincrement())
  addonCategory   AddonCategory @relation(fields: [addonCategoryId], references: [id])
  addonCategoryId Int
  menu            Menu          @relation(fields: [menuId], references: [id])
  menuId          Int
  isArchived      Boolean       @default(false)
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
}

model Addon {
  id              Int           @id @default(autoincrement())
  name            String
  price           Int           @default(0)
  addonCategory   AddonCategory @relation(fields: [addonCategoryId], references: [id])
  addonCategoryId Int
  OrderLine       OrderLine[]
  isArchived      Boolean       @default(false)
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
}

model Order {
  id         Int         @id @default(autoincrement())
  status     ORDERSTATUS
  totalPrice Int
  OrderLine  OrderLine[]
  table      Table       @relation(fields: [tableId], references: [id])
  tableId    Int
  isArchived Boolean     @default(false)
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
}

model OrderLine {
  id         Int      @id @default(autoincrement())
  order      Order    @relation(fields: [orderId], references: [id])
  orderId    Int
  menu       Menu     @relation(fields: [menuId], references: [id])
  menuId     Int
  addon      Addon    @relation(fields: [addonId], references: [id])
  addonId    Int
  quantity   Int
  orderSeq   String
  isArchived Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Table {
  id         Int      @id @default(autoincrement())
  name       String
  loaction   Location @relation(fields: [locationId], references: [id])
  locationId Int
  assetUrl   String
  isArchived Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  orders     Order[]
}

model User {
  id        Int     @id @default(autoincrement())
  email     String  @unique
  name      String?
  companyId Int
  comapny   Company @relation(fields: [companyId], references: [id])
}

enum ORDERSTATUS {
  ORDERED
  OUTFORDELIVERY
  DELIVERED
  CALCELED
}
